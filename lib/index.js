import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var CropWithAspect = /** @class */ (function (_super) {
    __extends(CropWithAspect, _super);
    function CropWithAspect() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CropWithAspect.prototype.crop = function (pathToImage, options) { return cordova(this, "crop", { "callbackOrder": "reverse" }, arguments); };
    CropWithAspect.pluginName = "Crop";
    CropWithAspect.plugin = "cordova-plugin-crop";
    CropWithAspect.pluginRef = "plugins";
    CropWithAspect.repo = "https://github.com/7h4r05/cordova-plugin-crop";
    CropWithAspect.platforms = ["Android", "iOS"];
    CropWithAspect = __decorate([
        Injectable()
    ], CropWithAspect);
    return CropWithAspect;
}(IonicNativePlugin));
export { CropWithAspect };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2Nyb3Atd2l0aC1hc3BlY3Qvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBc0NwQyxrQ0FBaUI7Ozs7SUFVbkQsNkJBQUksYUFBQyxXQUFtQixFQUFFLE9BQXFCOzs7Ozs7SUFWcEMsY0FBYztRQUQxQixVQUFVLEVBQUU7T0FDQSxjQUFjO3lCQXZDM0I7RUF1Q29DLGlCQUFpQjtTQUF4QyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JvcE9wdGlvbnMge1xuICBxdWFsaXR5PzogbnVtYmVyO1xuICB0YXJnZXRIZWlnaHQ/OiBudW1iZXI7XG4gIHRhcmdldFdpZHRoPzogbnVtYmVyO1xuICBhc3BlY3RXaWR0aD86IG51bWJlcjtcbiAgYXNwZWN0SGVpZ2h0PzogbnVtYmVyO1xufVxuXG4vKipcbiAqIEBuYW1lIENyb3Agd2l0aCBhc3BlY3RcbiAqIEBkZXNjcmlwdGlvbiBDcm9wcyBpbWFnZXNcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ3JvcCB9IGZyb20gJ2lvbmljLWNyb3Atd2l0aC1hc3BlY3Qvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGNyb3A6IENyb3ApIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuY3JvcC5jcm9wKCdwYXRoL3RvL2ltYWdlLmpwZycsIHtxdWFsaXR5OiA3NX0pXG4gKiAgIC50aGVuKFxuICogICAgIG5ld0ltYWdlID0+IGNvbnNvbGUubG9nKCduZXcgaW1hZ2UgcGF0aCBpczogJyArIG5ld0ltYWdlKSxcbiAqICAgICBlcnJvciA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBjcm9wcGluZyBpbWFnZScsIGVycm9yKVxuICogICApO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogQ3JvcE9wdGlvbnNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdDcm9wJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tY3JvcCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tLzdoNHIwNS9jb3Jkb3ZhLXBsdWdpbi1jcm9wJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENyb3BXaXRoQXNwZWN0IGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQ3JvcHMgYW4gaW1hZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGhUb0ltYWdlXG4gICAqIEBwYXJhbSB7Q3JvcE9wdGlvbnN9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIG5ldyBpbWFnZSBwYXRoLCBvciByZWplY3RzIGlmIGZhaWxlZCB0byBjcm9wLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyxcbiAgfSlcbiAgY3JvcChwYXRoVG9JbWFnZTogc3RyaW5nLCBvcHRpb25zPzogQ3JvcE9wdGlvbnMpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19